/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package WeeklyBusinessLog;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.Window;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.LocalDate;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author Sady
 */
public class ReportsDialog extends javax.swing.JDialog {

    /**
     * Creates new form ReportsDialog
     */
    private Connection connection;
    private static String username, password;
    private ArrayList<Customer> customerList = new ArrayList<>();
    
    public ReportsDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        centerWindow(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel11 = new javax.swing.JLabel();
        startMonthComboBox = new javax.swing.JComboBox<>();
        startDayComboBox = new javax.swing.JComboBox<>();
        startYearComboBox = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        endMonthComboBox = new javax.swing.JComboBox<>();
        endDayComboBox = new javax.swing.JComboBox<>();
        endYearComboBox = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        resultsTextArea = new javax.swing.JTextArea();
        resultsButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Reports");
        setResizable(false);

        jLabel11.setText("Start Date:");

        startMonthComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "January", "Febraury", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));

        startDayComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        startYearComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024", "2025" }));

        jLabel12.setText("End Date:");

        endMonthComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "January", "Febraury", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));

        endDayComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        endYearComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024", "2025" }));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Reports");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Results"));

        resultsTextArea.setColumns(20);
        resultsTextArea.setRows(5);
        jScrollPane1.setViewportView(resultsTextArea);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE)
                .addContainerGap())
        );

        resultsButton.setText("Run");
        resultsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resultsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addGap(18, 18, Short.MAX_VALUE)
                                .addComponent(endMonthComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(endDayComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(endYearComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 23, Short.MAX_VALUE)
                                .addComponent(startMonthComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(startDayComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(startYearComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(61, 61, 61))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(resultsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(startMonthComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(startDayComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(startYearComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(endMonthComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(endDayComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(endYearComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(resultsButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void resultsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resultsButtonActionPerformed
        // TODO add your handling code here:
        int startDay = startDayComboBox.getSelectedIndex();
        int startMonth = startMonthComboBox.getSelectedIndex();
        int startYear, endYear; 
        int endDay = endDayComboBox.getSelectedIndex();
        int endMonth = endMonthComboBox.getSelectedIndex();
        if (startDay == 0 || startMonth == 0 || startYearComboBox.getSelectedItem().toString().isEmpty()) {
          JOptionPane.showMessageDialog(this, "Please select a start date.");
        } else if (endDay == 0 || endMonth == 0 || endYearComboBox.getSelectedIndex() == 0) {
          JOptionPane.showMessageDialog(this, "Please select an end date.");  
        } else {
            startYear = Integer.parseInt(startYearComboBox.getSelectedItem().toString());
            endYear = Integer.parseInt(endYearComboBox.getSelectedItem().toString());
            ZoneId zoneId = ZoneId.systemDefault();
            LocalDate startDt = LocalDate.of(startYear, startMonth, startDay);
            LocalDate endDt = LocalDate.of(endYear, endMonth, endDay);
            int startDate = (int) startDt.atStartOfDay(zoneId).toEpochSecond();
            int endDate = (int) endDt.atStartOfDay(zoneId).toEpochSecond();

            //Check if Start date is before End date
            if (startDate > endDate) {
                JOptionPane.showMessageDialog(this, "The start date must be before the end date.");  
                return;
            }
            //Dates are selected...run report
            getResultsFromDatabase(startDate, endDate);
        }
    }//GEN-LAST:event_resultsButtonActionPerformed

    private void getResultsFromDatabase(int startDate, int endDate) {
        //SELECT * from CUSTOMERS where DATE BETWEEN __ and __;
        
        try (Connection conn = DriverManager.getConnection(DatabaseCredentials.databaseUrl, username, password)) {
            connection = conn;
            String query = "SELECT * FROM Customers WHERE income_date BETWEEN " + startDate + " AND " + endDate;
            Statement statement = connection.createStatement();
            ResultSet results = statement.executeQuery(query);
            System.out.println("Results: " + results);
            while (results.next()) {
                Customer newCustomer = parseCustomerFromResults(results);
                customerList.add(newCustomer);
            }
            displayResults(customerList);
        } catch (SQLException e) {
            System.out.println("Populate Customers Error: " + e);
        } finally {
            try {
                connection.close();
            } catch (SQLException ex) {
                System.out.println(ex);
            } 
        }
    }
    
    private Customer parseCustomerFromResults(ResultSet results) {
        try {
            Address address = new Address(results.getString("street"),
                    results.getString("unit"),
                    results.getString("city"),
                    results.getString("state"),
                    results.getString("zip"));
            Customer customer = new Customer();
            customer.setId(results.getInt("id"));
            customer.setFirstName(results.getString("first_name"));
            customer.setLastName(results.getString("last_name"));
            customer.setBusinessName(results.getString("business_name"));
            customer.setAddress(address);
            customer.setPhoneNumber(results.getString("phone"));
            customer.setEmail(results.getString("email"));
            customer.setAccountType(results.getString("account_type"));
            customer.setSourceDetails(results.getString("source_details"));
            customer.setSourceSpecifics(results.getString("source_specifics"));
            customer.setSourceType(results.getString("source_type"));
            customer.setIntalledSvc(results.getString("installed_service"));
            customer.setIncomeDate(results.getInt("income_date"));
            customer.setSurveyDate(results.getInt("survey_date"));
            customer.setInstallDate(results.getInt("install_date"));
            customer.setHistory(results.getInt("history"));
            customer.setAddOns(results.getString("add_ons"));
            customer.setMetricStatus(results.getString("metric_status"));
            return customer;
        } catch (SQLException e) {
            System.out.println("Parsing Customer Error: " + e);
        }
        return null;
    }
    
    private void displayResults(ArrayList<Customer> customers) {
        int installedCustomers = 0;
        int surveyedCustomers = 0;
        
        
        for (Customer customer: customers) {
            if (customer.installDate != 0) {
                installedCustomers += 1;
            }
            
            if (customer.surveyDate != 0) {
                surveyedCustomers += 1;
            }
            
        }
        
        resultsTextArea.setText("Installed Customers: " + installedCustomers + System.lineSeparator() + "Surveyed Customers: " + surveyedCustomers);
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReportsDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReportsDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReportsDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReportsDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        username = args[0];
        password = args[1];
        
        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ReportsDialog dialog = new ReportsDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    public static void centerWindow(Window frame) {
        Dimension dimension = Toolkit.getDefaultToolkit().getScreenSize();
        int x = (int) ((dimension.getWidth() - frame.getWidth()) / 2);
        int y = (int) ((dimension.getHeight() - frame.getHeight()) / 2);
        frame.setLocation(x, y);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> endDayComboBox;
    private javax.swing.JComboBox<String> endMonthComboBox;
    private javax.swing.JComboBox<String> endYearComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton resultsButton;
    private javax.swing.JTextArea resultsTextArea;
    private javax.swing.JComboBox<String> startDayComboBox;
    private javax.swing.JComboBox<String> startMonthComboBox;
    private javax.swing.JComboBox<String> startYearComboBox;
    // End of variables declaration//GEN-END:variables
}
